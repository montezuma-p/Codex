# Makefile refinado para build, testes, documenta√ß√£o multil√≠ngue, limpeza e automa√ß√£o

.PHONY: all build test clean doc doc-ferramentas doc-serve doc-publish help lint coverage install dev-install release check-release

all: build test

install:
	pip install -e .

dev-install:
	pip install -r requirements-dev.txt
	pip install -e .

build:
	bash scripts/build.sh

test:
	bash scripts/test.sh

lint:
	@echo "Executando linting do c√≥digo..."
	flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
	flake8 src/ --count --exit-zero --max-complexidade=10 --max-linha-comprimento=127 --statistics

coverage:
	@echo "Executando testes com cobertura detalhada..."
	pytest --cov=src/codex --cov-report=html --cov-report=term-missing --cov-report=xml -v
	@echo "Relat√≥rio de cobertura HTML gerado em htmlcov/index.html"

clean:
	bash scripts/clean.sh

check-release:
	@echo "Verificando se est√° pronto para release..."
	@echo "1. Executando testes..."
	pytest --cov=src/codex --cov-report=term-missing -v
	@echo "2. Verificando linting..."
	flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
	@echo "3. Buildando pacote..."
	python -m build
	@echo "4. Verificando pacote..."
	twine check dist/*
	@echo "‚úÖ Pronto para release!"

release:
	@echo "Iniciando processo de release automatizado..."
	bash scripts/release.sh

doc:
	@echo "Documenta√ß√£o multil√≠ngue: docs/pt/ (Portugu√™s), docs/en/ (English) e guias did√°ticos."

doc-ferramentas:
	python cli_agent.py --doc-ferramentas
	@echo "Documenta√ß√£o das ferramentas atualizada em docs/pt/guia_didatico/auto_documentacao_ferramentas.md e docs/en/guia_didatico/auto_documentacao_ferramentas.md"

doc-serve:
	@echo "Servindo documenta√ß√£o multil√≠ngue localmente (MkDocs) em http://localhost:8000"
	mkdocs serve

doc-publish:
	@echo "Publicando documenta√ß√£o multil√≠ngue (MkDocs) para GitHub Pages"
	mkdocs gh-deploy --clean

help:
	@echo "Comandos dispon√≠veis:"
	@echo ""
	@echo "üîß Desenvolvimento:"
	@echo "  make install         - Instala o pacote em modo desenvolvimento"
	@echo "  make dev-install     - Instala depend√™ncias de desenvolvimento"
	@echo "  make build           - Executa build do projeto"
	@echo "  make test            - Roda todos os testes com cobertura b√°sica"
	@echo "  make coverage        - Testes com cobertura detalhada (HTML + XML)"
	@echo "  make lint            - Executa linting do c√≥digo com flake8"
	@echo "  make clean           - Limpa arquivos tempor√°rios, caches e bytecode"
	@echo ""
	@echo "üöÄ Release e Deploy:"
	@echo "  make check-release   - Verifica se est√° pronto para release (testes, lint, build)"
	@echo "  make release         - Processo completo de release automatizado"
	@echo ""
	@echo "üìö Documenta√ß√£o:"
	@echo "  make doc             - Mostra refer√™ncia de documenta√ß√£o multil√≠ngue"
	@echo "  make doc-ferramentas - Gera documenta√ß√£o autom√°tica das ferramentas (pt/en)"
	@echo "  make doc-serve       - Servidor local do MkDocs (http://localhost:8000)"
	@echo "  make doc-publish     - Publica documenta√ß√£o no GitHub Pages"
	@echo ""
	@echo "üí° Workflow completo:"
	@echo "  1. make dev-install  (primeira vez)"
	@echo "  2. make coverage     (durante desenvolvimento)"
	@echo "  3. make check-release (antes de release)"
	@echo "  4. make release      (para nova vers√£o)"
	@echo ""
	@echo "  make help            - Mostra esta mensagem de ajuda"
